positional parameters:

# script.sh parameter1 parameter2 parameter3

$0 contains "script.sh"
$1 contains "parameter1"
$2 contains "parameter2"
$3 contains "parameter3"


##example script:

#!/bin/bash

echo "Executing script: $0"
echo "Archiving user: $1"

# Lock the account
passwd -l $1

# create an archive of the home directory.
tar cf /archives/${1}.tar.gz /home/${1}

##example of ouput when executing the above script:

$ ./archive_user.sh elvis
Executing script: ./archive_user.sh
Archiving user: elvis
passwd: password expiry information changed
tar: Removing leading '/' from memember names
$

#you can assign the positional variables to a more user friendly name and get the same output
USER=$1  #the first parameter is the user


#special variable $@
can access all the positional parameters starting from $1
for example iterate using for loop over the STDIN the user provides in the command line parameters

