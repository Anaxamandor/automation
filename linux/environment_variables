environmental variables:
see contents of variable using echo $VAR_NAME
##############################################################################################
PATH
- an enviornmental variable that controls the command search path
- contains a list of directories to be searched, in left to right order, separated by colon
- echo $PATH to see the contents
##############################################################################################
which
- gives location of command you are executed
- if multiple programs with same name exist, whichever is first in PATH will be executed

##############################################################################################
# viewing all environment variables:

printenv

##############################################################################################
# viewing value of one environment variable:

printenv HOME

echo $HOME


##############################################################################################
# creating environment variables (or overriding them if they exist)

export VAR="value"

examples:
export EDITOR="vi"
export TZ="US/Pacific"

##############################################################################################
# removing environment variable

unset VAR

example:
unset TZ

##############################################################################################
# Persisting Environment Variables

define it in the .bash_profile file using the same syntax.


##############################################################################################
# Understanding the impact of changing an environmental variable

Man pages for a command, environment section, will explain the impact

example:

man date

read up on TZ environment variable



################################################################################################################################################################

The EDITOR variable will work if you use the "export" command with it.  If a variable isn't exported, then subshells and commands won't have access to its value.

This should work:

EDITOR=nano
export EDITOR
You can also do it all on one line:

export EDITOR=nano

Whenever you change an environment variable that commands will probably need to access (like $EDITOR), you should export it.


to test it changed:
chrontab -e
