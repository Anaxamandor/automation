
+++++++++++++++++++++++++++++++SKILL: MPLS Overview+++++++++++++++++++++++++++++++++++

#######################################################################################
Introduction to MPLS:
#######################################################################################
Cisco platform - CEF is used for both IP forwarding and Label Switching
FIB is used for IP 
LFIB is used for label forwarding

LSR (Label Switch Router) = router doing MPLS

We use MPLS to support many applications:
IP forwarding (unicast and multicast)
Traffic engineering (TE)
VPNs (layer 2 and layer 3)

MPLS uses the IGP for the actual IP forwarding.  
OSPF or IS-IS are best options as they support more
It is used to learn routes (loopbacks specifically)
MPLS creates a label for each destination in routing table

Labels are exchanged between peers (usually directly connected)

Labeling method depends on the application:
LDP (label distribution protocol) - IP forwarding
MP-BGP -VPN
RSVP -TE

IP forwarding is performed using the FIB and the LFIB
multiple choices:
 - (no label) an IP packet can simply be forwarded as an IP packet
 - An IP packet can have a label imposed and forwarded as labeled
 - A labeled packet can be label swapped and forwarded as labeled
 - A labeled packet can have its label removed and forwarded as an IP packet

#######################################################################################
Explore MPLS Labels:
#######################################################################################

MPLS uses a 32 bit shim header that is inserted betwen the original L2 and L3 headers

Header fields:
20 bit label
3 bit EXP field - used for QoS 
1 bit S-bit (bottom-of-stack indicator) - flag that indicates where last label is
8 bit TTL field (decrements by 1 as it is passed from one LSR to another)

PHP (penultimate hop popping)
-is enabled by default on Cisco routers
-popping the label allows subsequent hop to not do a dual lookup in LFIB and FIB
- IMP-NUL (3) is created on final router
- feature may need to be turned off such as when using QoS

#######################################################################################
Label Stacks and IP Forwarding:
#######################################################################################

The primary purpose for running MPLS is to support applications
- IP and IPv6 unicast routing
- IP and IPv6 multicast routing
- Traffic Engineering (TE)
- Differentiated QoS
- Layer 2 VPN: Any Transport over MPLS (AToM)
- Layer 3 VPN

To support many of these applications, additonal labels are used
- this is called a label stack
- there can be as many labels as needed (each application typically uses a small number)
- ensure MTU allows for all needed labels (each label adds 32 bits to the original packet)
- the bottom-of-stack indicator indicates the last label of the stack
- If label has S bit of 0 means next header is a label
- If label has S bit of 1 means next header is the original L3 header and no additional labels
- If there is a single label it will always be a 1 as it's the bottom of the stack


IPv4 and IPv6 forwarding:
- needed to support other applications
- a label is created for every IP destination -- represents a FEC (Forwarding Equivalency Class)
(FEC = a grouping of packets that are going to receive the same treatment from MPLS)
- Multicast is also supported with PIM
(the FEC is noting more than a multicast desitnation in this case)

#######################################################################################
MPLS VPNs:
#######################################################################################

***Layer 2 VPNs:***

- offer a more traditional WAN connection
- encapsulation can be the same or different on each end (typically the same, but ATM on one side and Frame Relay on another was used)
- commonly carry Ethernet, but legacy encapsulations (ATM, FR, PPP, HDLC) are also supported
- no layer 3 connection with the service provider (this means service provider is not involved in customer's routing)
- 2 flavors of EoMPLS (Ethernet over MPLS) i.e. L2 VPN:
point-to-point (two customer sites connected by a sigle link)
mutlipoint: Virtual Private LAN Service (VPLS).  

In the multipoint case the entire SP environment just looks like a big switch, as if customer plugs all their WAN routers 
into a switch.  All routers can form OSPF neighborhsips with each other for example.

***Layer 3 VPNs:****

offered to provide customer WAN services (possibly more intelligent WAN services than we had traditionally)
- also sometimes used in enterprise cores

customer routes are learned from the customer's CE routers
- any protocol can be used to learn these routes (typically BGP)
- each protocol has caveats when used with layer 3 VPN so be careful how implementing it
- SP can use managed services (managed edge) to manage the CE router for the customer if they don't know BGP very well.

customer routes are kept isolated
- on the PE using VRFs
- in the core with the VPN label (the second label that's required for MPLS VPN - the MP-BGP learned label)
- customers can use any IP addresses (even overlapping)

optimal traffic delivery is possible due to the SP learning of the customer routes
- provides a full mesh for customer connectivity

two labels are required
- a LDP learned label is used for forwarding between PEs (through the SP's core)
- a MP-BGP learned label (also known as VPN label mentioned above) is used to identify the egress VRF/route/interface

providers can choose to offer central service VPNs
- such as voice services, centralized email services, DNS services, whatever the SP would like to offer to multiple customers 
yet still keep customers isolated from each other

#######################################################################################
Traffic Engineering:
#######################################################################################

normally your IGP will choose to use the best path based on given criteria
the best path does not change based on traffic flows

TE allows the routers to choose a different or additional path based on constraints
- bandwidth
- media type
- flow priority

In order to accomplish this without causing a loop, the router must know the topology
- this reuqires a link-state routing protocol
OSPF with extensions
IS-IS with extensions

A TE tunnel from the head end to the tail end routers
- all tunnels are unidirectional, so return traffic must create it's own TE tunnel

RSVP (resource reservation protocol) is used for the control plane
- tunnel establishment
- the label for the tunnel
- RSVP was used with QoS but it's repurposed for MPLS TE

#######################################################################################
MPLS QoS:
#######################################################################################

QoS allows some types of traffic to be prioritized
- managed unfairness

MPLS QoS includes:
- packet classification (matching and marking on traffic)
- congestion management (queuing)
- congestion avoidance (mechanisms such as tail drop, weighted tail drop, WRED)

LDP is used to propogate different labels for different QoS classes
(by using these different labels traffic can be treated differently)

We also support traditional QoS markings by setting EXP bits 
(which act in a similar fastion to the Ethernet CoS bits)






++++++++++++++++++SKILL Label Distribution Protocol (LDP)++++++++++++++++++++++++++++++

#######################################################################################
LDP Overview:
#######################################################################################

the most common use of labels learned through LDP is IPv4 or IPv6 forwarding

MPLS labels are locally significant to the router
- A label is created for each IP destination -FEC
- neighbors use the labels learned from their neighbors
- therefore the labels are directly connected neighbors need to be known

LDP is used to exchange the labels used for IP forwarding
- routing protocols could have been used instead
- a separate protocol (LDP) was chosen to minimize the changes needed to the IGPs

LDP is a standard (RFC 3036 + updates) that replaced Cisco's propriary TDP
- uses UDP and TCP
- generally used on directly connected neighbors (but can be targted for routed neighbors, often just for backup)

#######################################################################################
LDP Neighborship:
#######################################################################################
The LDP router ID is used to identify the neighbor and the label space
- the router ID should be manually configured
- if not configured, it will choose the highest IP address from a loopback interface
- if no loopback exists, it will use the highest IP from an interface
- On XR it can default to the global router ID

LDP neighborship starts with discovery
- a hello message is sent on the local segment
    * sent using UDP
    * sent to link local multicast address for all routers (all routers multicast address)
    * sent to specifically port REDACTED
    * can contain a TLV indicating a transport address (can specify a different source address such as a loopback)
- hellos are sent every 5 sec
- when a neighbor receives a hello it moves to the adjacency phase

LDP adjacency phase
- A TCP session will now be open
   * session will be open by the LSR with the highest LDP router ID
   * session is open to either the source address (address of egress interface) or the transport address
   * session is to TCP on port REDACTED
- Exchange initialization messages (defines how communication will occur between the two neighbors)
   * The label distribution method
   * The session keepalive time (default is 60 sec)
   * The fault tolerent TLV
- Send initial keeplaive message
   * sent every 60 seconds

LDP adjacencies can be established between non-connected LSRs
- The LSR is configured to unicast a hello to the destination (not a multicast)
- This is referred to as a LDP targeted hello
- The rest of the neighborhship process is the same as usual

#######################################################################################
LDP Session Protection:
#######################################################################################

Session protection can be used to back up a neighborship
- configured for all neighbors 
- alternatively can protect a subset of our neighborships using an ACL (disabled by default)
- if using this ACL feature, targted hellos are sent automatically to neighbors which have 
primary adjacencies and are on the ACL
- if not using the ACL it would be to all of them that we have a primary adjacency to meaning a directly connected
adjacency

How does session protection work?
LDP uses targeted hellos to establish a backup session in case the primary session fails.
The backup targeted hellos maintain the LDP adjacency when the primary link goes down

A duration can be specified for how long to maintain the backup session
- can be set to infinite
- default is 24 hours

THe command to enable session protection:
 - XR 'session protection'
 - XE 'mpls ldp session protection'

#######################################################################################
LDP Graceful Restart and NSR:
#######################################################################################

LDP graceful restart allows recovery of the control plane without affecting the data plance
-This works the same as with routing protocols

LDP Graceful restart can be enabled with:
 - the 'graceful-restart' command in LDP configuration on XR
 - the 'mpls ldp graceful-restart' global command on XE

Neighboring LSRs which support NSR/SSO will continue to forward traffic to the recovering device
- traffic is forwarded using the last known good information (stale entries)
- this allows for much quicker recovery
- if the recovering device does not recover in the allocated time, it will be removed from the neighborship
- if the recovering device does reconnect, the state info (stale info) is used while the database is resynchronized

This avoid flushing of all the labels in the LIB an LFIB by continuing to use what we know until neighborship 
is re-established and LIB is resynchronized
LIB - stores all labels
LFIB - stores labels we use

LDP NSR makes RP failures invisible to routing peers (prevents disappearing out of the routing table)

LDP NSR is enabled with 'nsr' in LDP configuration

LDP NSR and LDP graceful restart are virtually equiavlanet to how NSR and graceful restart work in our routing protocols


#######################################################################################
IGP Synchronization and Autoconfiguration:
#######################################################################################

*** IGP syncrhonization ***
IGP Synchronization is used to prevent an IGP learned path from being used until LDP has also converged on that interface

Sychronization also prevents a link from being used if the LDP session goes down

How it works:
The IGP will only advertise regular (usable) metrics when LDP is syncrhonized with the link
- LDP is considered converged (syncrhonized) when at least one LDP session is up on the interface
- This will normally happen immediately (as soon as we are synchronized we will start using the link)
- A delay can be configured if needed for up to 60 seconds

syncrhonization is only supported for OSPF and IS-IS
- enabled on XR and XE with 'mpls ldp sync' under the protocol (IS-IS or OSPF) configuration

Recommended to use syncrhonization to avoid black holeing traffic

*** Autoconfiguration ***

LDP can be configured manually on interfaces
- gives precise adminsitrative control over what interfaces are running LDP
- tedius if a large number of interfaces to configure
- could be error prone

Autoconfiguration is supported by OSPF or IS-IS
- LDP is automatically enabled on interfaces running the protocol instance
- Must be enabled under the routing process
   * IOS XR and XE both use 'mpls ldp auto-config'
- In OSPF this can also be enabled per area
   * Simply add the option 'area area_id" to the end of the command

#######################################################################################
Implement LDP:
#######################################################################################

***LDP configuratiton on XR***
conf t
mpls ldp
router-id x.x.x.x (same as loopback IP)
router ospf 1
area 0
mpls ldp auto-config
commit
show mpls interface
show mpls ldp neighbor
show mpls ldp binding
show mpls forwarding-table 

***LDP configuraiton on XE***
conf t
mpls ldp router-id loopback x
int x.x
mpls ip
end
show mpls interface (verify interfaces are configured)
show mpls ldp neighbor 
show mpls ldp bindings (this is looking at the LIB which includes all labels learned from everybody.  We won't use all these.)  
We compare LIB entries to the Routing Table or FIB to create the LFIB
show  mpls forward (shows the LFIB)
show ip cef x.x.x.x/xx 

############################################################################################
diagnositc commands
############################################################################################


show mpls ldp bindings (this is looking at the LIB which includes all labels learned from everybody.  We won't use all these.) 

show ip vrf interface
show bgp vpn4 unicast all summary
show bgp vpnv4 unicast vrf Cust-A (shows routes)


show mpls interface (verify interfaces are configured)
show mpls ldp neighbor 
show mpls ldp bindings (this is looking at the LIB which includes all labels learned from everybody.  We won't use all these.)  
We compare LIB entries to the Routing Table or FIB to create the LFIB
show  mpls forward (shows the LFIB)
show ip cef x.x.x.x/xx 
############################################################################################
insights:
############################################################################################

what makes a PE is vrf and MPLS both configured.  If only MPLS it is a provider router but not a PE





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ADVANCED MPLS TUTORIAL FOR NETWORK ENGINEERS:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



+++++++++++++++++++++SKILL: Discover MPLS Layer 2 VPNs++++++++++++++++++++++++++++++++++++++


############################################################################################
Introduction to L2 VPN:
############################################################################################

Layer 2 VPN is a service to allow layer 2 connectivity between customer sites

There are a few different services available:
-- Virtual Private Wire Service (VPWS) [traditional]
----point to point connection 
----can use L2TPv3 over an IP network
----can use MPLS for the transport (AToM)

Any Transport over MPLS (AToM)
-subest of VPWS
-supports:
Ethernet
Point-to-Point Protocol (PPP)
HDLS
Frame Relay
Asynchronous Transfer Mode (ATM)

Advantages to the Enterprise:
- Identical to traditional WAN services (such as E1s and T1s -> Engineers very familiar with this model)
- Each customer can have its own routing and service policies (versus having SP involved in their routing)
- Allows enterprise to have a single infrastructure for both IP and traditional services (for example IS-IS which will not work over IP but will work over L2VPN)
- Optimizes data center solution (allows for workload mobility between two data centers for servers that need to be on same broadcast domain)
- Maintains enterprise autonomy

Advantages to the Service Provider:
- migration path to MPLS or an IP core
- service continuity
- lower cost due to single infrastructure
- maintains customer autonomy

For a MPLS transport, two labels are used in the stack
- The top label is used to transport the packet from the ingress PE to the egress PE
* This is referred to as the tunnel label or forwarding label
- The second label is used only on the egress PE to identify the egress interface
* This is referred to as the VC (virutal circuit) label (it tells the PE which interface to deliver it to)

L2 VPN has three primary components:
* Attachment Circuit (AC)
  * This is the circuit between the CE and the PE
  * The AC will be mapped to the VC for transport through the core
  * This works in reverse in the other direction

* Pseudowire (PW)
  * this emulates the operation of a virtual wire (i.e. a virtual circuit)

* The underlying transport
  *MPLS
   - uses targeted LDP for the control plane
  *IP
   - uses L2TPv3 for the control plane


############################################################################################
L2 VPN Types:
############################################################################################

Many Layer 2 VPN types share the same names depending on the organization, but primarily called:
P-to-P:  E-Line or VPWS
Mutlipoint:  E-LAN or VPLS

Flexible Ethernet Mapping
- Processes and classifies various Ethernet frame types
  * Ethertype
  * VLAN tag [most popular way]
  * Class of Service (CoS)
- The Cisco ASR 9000 Series uses the Ethernet Flow Point (EFP) concept
- Each Ethernet "flow" from the customer or access side is mapped or connected to a service on the trunk side

The Customer Equiepment (CE) device connects to the Carrier Ethernet network at the UNI (User-network interface)

The Attachment Circuit (AC) is the circuit between the CE and the UNI

Flavors of Point-to-Point (E-Line):
  - Local connect
     * Two EFPs on the same platform
     * Uses native Ethernet
  - EoMPLS
     * Two EFPs on different platforms
     * Connected with Pseudowires (PWs)

Flavors of Multipoint (E-LAN)
  - Local bridging
     * Two or more EFPs on the same platform
     * Uses native Ethernet in a bridge domain to connect these links together at layer 2
  - VPLS bridging
     * Two or more EFPs on different platforms (multliple PEs) in a bridge domain
     * Connected with a full mesh of Pseudowires

############################################################################################
VPLS Overview:
############################################################################################

VPLS is a multipoint Ethernet connection service.

VPLS provides a way to connect remote sites together as if they were connected to a single LAN segement, 
effectively like sites are plugged into one big switch

One or more emulated LANs can be created for each customer:
- Each emulated LAN looks like a giant Ethernet switch to the customer
- Each emulated LAN is completely separate from other simulated LANs
- For each emulated LAN, the PE routers have a full mesh of PWs (pseudo wires).

When the PE receives a frame it inspects the DMAC to forward it to the correct egress PE (much like a regular switch would do)

MAC learning in VPLS on the PE is very similar to the operation of a traditional switch
- initial traffic (that we don't know the MAC for, such as initial unicast traffic) is sent to all the PWs
- MAC addresses are learned baseed on the Source MAC
- For unicast, SMAC is mapped to the arriving interface - Physical (if local connection) or PW (if coming accross the core)
- broadcast and multicast are destination addresses so always get flooded as we only learn based on source MAC
- Further traffic is sent just to appropriate egress PE
- split-horizon is used to prevent loops (similar to traditional Ethernet switch where flood out the traffic but never out arrival interface)

Broadcast and Multicast traffic are also handled like a traditional switch
- Traffic is flooded to all other sites and ports
- Due to split-horizon, the traffic will be propogated in a loop-free tree

The CE can be either a switch or a router
- using a router is recommended in larger environments
- routers prevent a large number of MAC addresses needing to be learned on the PEs

############################################################################################
Implement VPLS:
############################################################################################

VPLS is not supported on IOS-XRv 9k

review the video if using a VPLS config

############################################################################################
EoMPLS Overview:
############################################################################################

EoMPLS is the most popular form of VPWS/AToM

Some of the unneeded headers are removed from the Ethernet frame in transit
  - Preamble and SFD
  - FCS

If operating in Ethernet port mode, all VLAN information is transmitted, but the VLAN tag may be overwritten on the egress PE
(so a VLAN on one side could be mapped to a different VLAN on the egress side)

EVCs (Ethernet Virtual Circuits) define the following aspects of attachment and virtual circuits:
- Frame matching based on one or more VLAN tags
- Optional VLAN tag manipulation
- Traffic forwarding
- Additional services, such as QoS policies

Redundancy:
We're talking here about redudancy to the tunnel (having a backup tunnel), but could also have two redundant circuits to the customer
Different ways to provide redundancy with EoMPLS model:
- redundant remote PE routers (put up one tunnel then a redundant tunnel to the second PE)
- redundant attachment circuits to the CE
- redundant pseudowires

*Keep in mind if the path between the PE routers can be repaired with the IGP in the core, 
the original PW will simply be rerouted. This however may not always be possible if not enough PW connections.
If it can route around the down PW we don't need redundnacy for the PW itself because IGP will handle it.

* If the failure prevents the repair of the primary PW, it will switch to the backup PW.

* Redundancy can be implemented either one-way or two-way
   - with one-way, only one side has redundancy
   - with two-way, there are 2 PEs on both sides and both sides provide redunancy (2 way is generally better). 
     Requirements:
       - Full mesh of PWs
       - Only one PW will be active - the rest are standby
       - Requires mutli-chassis link aggregagion group (MC-LAG) used so the PWs work as a team 
       - Interchassis Communication Protocol (ICCP) is used to form the redundancy group


############################################################################################
Implementing EoMPLS:
############################################################################################

see video if using this











+++++++++++++++++++++++++++++++SKILL:  Discover  MPLS Layer 3 VPNs +++++++++++++++++++++++++

############################################################################################
Introduction to L3 VPN:
############################################################################################

MPLS Layer 3 VPNs involve the service provider being involved in the customer's routing

acts as full mesh

SP must carry a lot of customer routes

MP-BGP is used a control plane (could also say LDP is additionally)

For data plane, Layer 3 VPN uses a label stack consisting of two labels:
  - forwarding label: label for the loopback interface on the egress PE
       * Learned through LDP
       * a LDP learned label is used for forwarding between PEs (through the SP's core)
  - VPN label: label for the customer route on the egress PE
       * learned through MP-BGP
       * a MP-BGP learned label (also known as VPN label mentioned above) is used to identify the egress VRF/route/interface
       * it is actually used on the egress PE and used to choose which route on the egress PE will be used to deliver the traffic

How do customer's get their routes to the service provider?
Customers will run a routing protocol or static routing (on the SP side not customer side) with the service provider
  - This is called the CE-PE routing protocol
  - Any protocol allowed by the service provider can be used. RIPv2, OSPF, EIGRP, BGP, IS-IS.  Usually BGP is used here.

Having the customer routes allows the service provider to make the best decisions when delivering customer traffic
   - Because of this, L3 VPN acts as a full-mesh topology with each customer site being able to send traffic to each other site directly

Being involved in the customer routing presents several problems for the service provider
   - customer expects autonomy (separate traffic from other customers)
   - customers use overlapping address spaces

Customer routes must only be on the PE.  PE's only need to carry routes for customers on that PE.

Sometimes we need Complex VPNs (overlapping VPNs), such as business partners who still want security between them, and only linked through headquarters not to other sites

Service providers also use layer 3 VPNs to offer services to customers called Central Service VPNs
Central Service VPNs allow the customers who want to the service to access the VPN but still keep the customer traffic separted from each other.


############################################################################################
Virtual Routers and Forwarders:
############################################################################################

a VRF is effectively a different PE for each customer, a solution that was needed as routing filtering methods (ACLs, etc would have overlapping routes)
just separate routing table is instantiated
control plane and data plane are separated, but not the management plane.  the management pane is still shared
a router is a routing table with interfaces and commonly a routing protocol to fill the table
routing protocols can be enabled separately per VRF

############################################################################################
Routing in the Network Core:
############################################################################################

VRFs do a wonderful job on the PE routers, but getting the routes between the VRFs on different PEs has different problems.

We don't want our core routers to be carrying customer routes, or maintain a VRF for every customer on every PE router - does not scale
We need a protocol that can run between non-connected neighbors (the PEs), and IGPs are not meant for that.
Normally we only need a VRF on a PE router if that customer has a presence on that PE router.

BGP meets all the requirements for a solution 
- single routing protocol
- very scalable and able to handle all the routes from all the customers
- easily extensible to support additional information
- designed to run between non-connected neighbors -PEs

probably will run to 1 or more route reflectors for redundancy

Using one protocol (BGP) does not, however, solve the problem of allowing customers to use overalapping IP addresses.

In order to support overlapping IP addresses, routes need to be modified to make them unique, as they are carried by BGP in the network core.

To make them unique, a RD (Route Distinguisher) is prepended to the front of the address.

Route Distinguisher
- 64-bit address (format is usually the ASN number:unique customer number)
- configured in the VRF
- used for both IPv4 and IPv6
- resulting route is 96 bits for IPv4 and 192 bits for IPv6
- these prefixes are no longer standard IPv4 or IPv6 routes
- instead they are called VPNv4 or VPNv6 routes

Since BGP will be carrying VPNv4 and VPNv6 prefixes, it is called multi-protocol or MP-BPG

MP-BGP will carry VPNv4 and VPNv6 routes between PEs
The next hop on the updates will be set to to the advertising PE's address (usually loopback)

Generally how MP-BGP is run in a SP core:
The CE routes are advertised to the ingress PE
The ingress PE puts the routes into MP-BGP
The ingress PE loopback advertises to the route reflector(s)
The route reflector(s) advertise to the other PEs
When the PE gets the update, the next hop will be the loopback on the ingress PE 
we then use MPLS labels to learn how to get to that next hop 
ultimately this is how the customer routes are going to get back through
the egress PE will send the roues to the customer's CE on the other end so the customer gets their own routes back

############################################################################################
Controlling Route Distribution:
############################################################################################

The goal is to have a way to know which VRFs on which PEs routes need to be placed into

Once the MP-BGP VPNv4/6 update reaches the remote PE routers, we come across the next issue that needs to be solved:

The correct prefixes for the correct customers need to be placed into the BPG table for the correct customer VRF

In order to ensure updates are put into the desired VRFs, we use another number called a RT (route target)
- 64 bit value (format is usually ASN:VPN number.
- carried in BGP extended communities 
     * BGP must be enabled to propogate extended communities
- because extended communities are actually a community string, an update can carry many RTs
- not carried in actual prefix, unlike the RD.

-in IOS-XE must enable BGP to propogate extended communities

Route targets are configured in the VRF 
- export
- import
- both (IOS-XE has a macro that puts on import and export statements)

When an update is being sent, any and all (there can be multiple) RTs set to export in the VRF are added to the update. 
So it will create a community string consisting of all of the RTs.  
So this way we can have a prefix that is destined to multiple VPNs.

On the flip side, when an update is received, the list of RTs on the update are compared to the RTs being imported by each VRF on the PE.
- If any VRF is set to import the RT the route is placed in that VRF
- If no VRFs on the PE are set to import the RT, the update is discarded (i.e. if no customers on the PE need them they are discarded)
- If the import RT is modified on any VRF (such as adding an RT to the customer's VRF), the PE will do a BGP Route Refresh to get the updates again.

- usually no reason to use more than one RT for a VPN, but you can.

- an MPLS L3 VPN is nothing more than the right routes, on the right routers, in the right tables.  So the RT identifies that, and so it is what identifies the VPN



############################################################################################
Central Services VPNs:
############################################################################################

service providers may want to offer central services to their customers 

For example:

managed edge services
voice gateways
email relay services
load balancers
DNS caches

The key to offering these services is connectivty needs to be allowed between the central services and the customers, 
but in so doing not allow traffic between the customers

Separation is accomplished by using the Route Targets in the appropriate way
- customers import the RT for the services they desire
- central service VPN imports RT for the interested customers (usually not their normal VPN route target they use for talking to their other remote sites)

Customer IP addresses also needs to be addressed (since we don't normally want them to be using their internal addressing to talk to central services)
- NAT can be used to deal with overlapping addresses (not a common solution)
- Dedicated addresses can be assigned to customers for the central services

filtering is needed on the central services PE to prevent customer routes from being sent back out.  
This can be done using an outbout BGP filter that only allows the subnet prefix of the central services servers to be allowed out of the central services VPN

############################################################################################
CE-PE Routing:
############################################################################################

The routing protocol used between the customers CE and the provider's PE is often called the CE-PE routing protocol

Options:
static, EIGRP, OSPF, IS-IS, BGP, RIPv2

static, OSPF, and BGP are most popular.  BGP is #1

Each protocol has it's own caveats 

Since MP-BGP is used exclusively in the core, the CE-PE protocol needs mutual redistribution unless BGP is used.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
CBT Nuggets - CCNP ENARSI
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

mpls ip (enables globally and same command on interfaces, and that starts the LDP neighborships)
LSR - label switching router
LSP - label switch path
each LSR generates a different label number for the same destination network
they share the labels for those routes with their peers
router has no need to touch the L3 IP header info to forward packets

-- Implementing L3 VPNs ---

VPN is a group of routes for a specific purpose (when talking about L3 VPNs)
VPNv4 is a customer's route once put into iBGP

export (out of VRF into MP-BGP)

RD can make same IPv4 routes different so can overlap same IPs in MP-BGP

RT in extended community tells PE which route in VPNv4 routes pool for MP-BGP 
(big pool with all routes) to import into VRF.  A route target is really a BGP extended community attribute.


conf t
vrf definition cust1
rd xx:xx
address family ipv4  (this is saying for ipv4 the folowing will be done)
route-target export xx:xx  (tells MP-BGP, when taking the routes out of the VRF and putting them into MP-BGP as VPNv4 routes, add extended-community of xx:xx)
route-target import yy:yy (when bringing in VPNv4 routes into the VRF from MP-BGP, only bring in routes tagged with extended-community of yy:yy)


int gig x/x
description going to PE from customer 1
vrf forwarding customer1
ip address x.x.x.x y.y.y.y
exit

router eigrp <ASN>
address-family ipv4 vrf <vrf>   (this takes into a logical config for eigrp just associated with the VRF)
redistribute bgp <BGP ASN> metric x x x x x   (imports the VPNv4 routes that match the RT for the VRF)
net x.x.x.x  (interfaces are included, in this case within just the VRF, use quad zero for all interfaces in the VRF)
autonous-system x  (from customer's perspective they are this ASN, so using unique ASNs for customers)
exit

next-hop-self (so they can show their own IP)
activate VPNv4 (allows sharing of customer routes)
enable extended communities
the bgp command to redistribute is for redistributing routes into MP-BGP




###############################################################################################
DIAGNOSTIC COMMANDS:


show mpls ldp bindings  (shows all the bindings for all the routes this router has - the LIB)
show mpls ldp bindings x.x.x.x xx (for a specific route)

show mpls forwarding-table  (shows the winners table for what we will do once all said and done -LFIB)

show mpls ldp discovery detail  (verfiying LDP ID)
   -Local LDP Identifer at the top of the page.
   -colon 0 represents that we are using system-wide label space as opposed to an individual set of labels per interface
   -The transport address (transport address means the "address if you want to connect to me") is the same as the router's LDP ID.


show mpls ldp neighbor  (the details for neighbors)
   - if you have multiple remote binding entries in the LIB showing in the outup of show mpls ldp bindings, 
     to determine path will be used, 
     you can use the command show ip route x.x.x.x and find out the next hop.  
     Then cross-reference that next hop with the output of show mpls ldp neighbor to see who owns that IP.  
   - can verify this with show mpls forwarding-table 
   - can verify with trace

show ip vrf
   - shows the default RD and associated interfaces for each VRF

show vrf <VRF-NAME>
   - shows the interfaces used and RD used for the VRF

show ip vrf detail
   - shows the route-targets and RD that have been configured an other info

show cdp ne detail


check prerequisites:
is cef enabled? 
ip cef distributed
show ip cef summary

is MPLS enabled?
mpls ip

show mpls interfaces detail  (verify MPLS forwarding has been configured properly and if it is operational)

show ip bgp vpnv4 all

show mpls label range

show bgp vpnv4 unicast vrf <vrf> labels (shows the VPN labels associated with routes in the vrf)


MPLS labels used in L3 VPNs:
transit label 
VPN label 

################################################################################
BFD can provide link state awareness; so therefore, it is not necessary to use 
link state protocol with MPLS for VPNv4 anymore.

MPLS needs a route table, but doesn't matter what protocol is used. Even not reqauired to use IP.

When the next hop is the last router, that's when PHP is used.





















































































































































