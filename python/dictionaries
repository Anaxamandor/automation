DICTIONARIES:

python 3.7 and up are ordered. (does this mean I can access elements via [0] or [1] indexes?)

dictionaries are mutable

keys must be hashable -> immutable object.  So strings, ints, tuples can serve as keys, but not lists
################################################################################
# creating a dictionary

my_dict = {"name": "John", "age": 35, "name": "McGovern", "hobbies": "Drums"}

in this example above, the second value McGovern overwrites John in the dictionary because keys cannot duplicate.


################################################################################
# adding keys:

my_dict["platform"] = "cisco_ios"   (adds a new k/v pair)

################################################################################
# accessing keys:

method 1:
my_dict["hostname"]
method 2:
my_dict.get("hostname")  (returns None instead of error for keys not found; can added in a second argument to give a message when keys not found)

#################################################################################
# removing keys:

method1
del my_dict["key_name"]  (this removes the key and the associated value)

method2: 
device.pop("key")  (unlike lists, must specify)
Can assign the output value to a variable:  
deleted_password = device.pop("password")
can add in a message if key is not found:
device.pop("version, "Key not found")

###################################################################################
# dict methods:

access only the keys:
list_of_keys = list(device_info.keys())

access only the values:
list_of_values = device_info.values()

puts together k/v pairs as tuples:
device_info.items()
list_of_items = list(device_info.items())  (this creates a list of tuples)


could iterate through these using for loop:
for value in device_info.values():
for key in device_info.keys():
for k, v in device_info.items():

can sort alphabetically:
for key in sorted(device_info.keys()):

###################################################################################
# unpacking:

take the contents of two dictionaries and add them to a new dictionary:

food_prices = {**chocolate_price, **pizz_prices}
















