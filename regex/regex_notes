.    - any character (except newline character)
\d   - Digit (0-9)
\D   - Not a Digiet (0-9)
\w   - Word character (a-z, A-Z, 0-9, _)
\W   - Not a word character
\s   - Whitespace (space, tab, newline)
\S   - Not Whitespace (space, tab, newline)

Anchors: 
\b   - Word Boundary
\B   - Not a word boundary
^    - Beginning of a String
$    - End of a String


[]   - Matches Characters in brackets  (example:  [a-zA-Z0-9] matches all letters and numbers)
[^ ] - Matches Characters NOT in brackets 
|    - Either Or
( )  - Group (match several different patters. example:  M(r|s|rs) or capture


Quantifiers:
*     - 0 or More
+     - 1 or More
?     - 0 or One ("optional", or "not greedy" when matched with a quantifier)
{3}   - Exact number
{3,4} - Range of Numbers (Minimum, Maxim
.*  match anything  - greedy
.*? match anything - not greedy

[] a set of characters  
\ signals a special sequence (can also be used to escape special characters)
{} exactly the specified number of occurances

() capture and group
?  zero or more occurrences
\b  returns a match where the specified characters are at the beginning or at the end of a word

Metacharacters that need to be escaped:
.[{()\^$|?*+

##############################################################################################
\n is better than $ if looking for one match

##############################################################################################
resources:

Geoffry Friedal regexbook

https://www.programiz.com/python-programming/regex

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Cheatsheet

python regex tutorial:  https://www.youtube.com/watch?v=JLFlsW2cfOM&list=PLQzZ4krxwT9anJYKybaNuwyKoqFxFa4Di
