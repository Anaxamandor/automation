# Here is an example Python script that reads in the twCSV files and joins them using the hostnames as the key. 
# It assumes that the first CSV fo ile has already been generated by the Ansible playbook, and is located at /path/to/my/file.csv. 
# The second CSV file is located at /path/to/my/otherfile.csv.

import csv

# Define paths to the input files and output file
file1 = '/path/to/my/file.csv'
file2 = '/path/to/my/otherfile.csv'
output_file = '/path/to/my/outputfile.csv'

# Define dictionaries to store the data from each file
data1 = {}
data2 = {}

# Read data from the first file into a dictionary
with open(file1, 'r') as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        data1[row['column1']] = row['column2']

# Read data from the second file into a dictionary
with open(file2, 'r') as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        data2[row['hostname']] = [row['column3'], row['column4']]

# Join the two dictionaries on the hostname key
output_data = []
for key in data1.keys():
    if key in data2:
        output_data.append([key, data1[key]] + data2[key])
    else:
        output_data.append([key, data1[key], '', ''])

# Write the joined data to a new CSV file
with open(output_file, 'w') as csvfile:
    writer = csv.writer(csvfile)
    writer.writerow(['column1', 'column2', 'column3', 'column4'])
    for row in output_data:
        writer.writerow(row)

        
# In this example, we first define the paths to the input files and output file. 
# We then define two dictionaries to store the data from each input file. 
# We use the csv.DictReader class to read in the data from each file, and store it in the appropriate dictionary using the hostname as the key.

# Next, we join the two dictionaries on the hostname key, and store the joined data in a list of lists called "output_data". 
# We then use the csv.writer class to write the joined data to a new CSV file, with the appropriate headers. 
# The output file will be located at /path/to/my/outputfile.csv.
