ansible-playbook playbook.yml --extra-vars "ansible_python_interpreter=/usr/bin/python3" -e "ansible_version=2.9"


using -C option:  
- use it to check regularly whether hosts are still "in sync" with ansible without making changes. 
- Can be useful to know that e.g. some of your production servers aren't configured how you expect them to be.
- it can test if some devices might fail due to connectivity issues, or authentication issues, before making actual changes, and you can see the error output. 
- say someone's gone in and made a change to a config file by hand to fix an issue, and forgotten to update the ansible to reflect it. 
You can see that it'd revert the config with --check.


ansible-playbook -i localhost, -c local test.yml
- The comma after the localhost inventory item ells Ansible we are listing inventory hosts on the command line rather 
than having to create a local inventory file, usuful shortcut when testing code


use -i to specify which hosts are groups of hosts


##################################################################################################################
# run the playbook in check mode:
ansible-playbook myplaybook.yml --check

This will run the playbook in "check mode", where Ansible will simulate the changes that would be made to the hosts
if the playbook were actually run. You can then review the output to troubleshoot any issues or validate that the 
playbook is doing what you intended it to do.

Note that the --check option is only supported by certain modules and playbooks, so be sure to check the documentation 
for the specific modules you are using to see if they support this option.

